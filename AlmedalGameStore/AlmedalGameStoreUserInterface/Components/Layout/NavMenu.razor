@implements IDisposable

@using Blazorise
@using System.Net.Mime
@using System.Security.Claims
@using AlmedalGameStoreUserInterface.Auth

@inject NavigationManager NavigationManager
@inject AuthService AuthService
@inject ILoadingIndicatorService LoadingIndicator

@rendermode InteractiveServer
<div id="custom-nav" style="background-color: transparent;">
    <Bar Breakpoint="Breakpoint.Desktop"
         Background="Background.Transparent"
         ThemeContrast="ThemeContrast.Dark">
        <BarBrand>
            <a href="" style="text-decoration: none; box-shadow: none; color:darkorange">
                <h1 class="retro-font neonText logo-flicker">Almedal Game Store</h1>
            </a>
        </BarBrand>
        <BarToggler />
        <BarMenu>
            <BarStart>
                <BarItem>
                    @{
                        var activeClass = GetActiveClass("products");
                        var classes = $"nav-link neonText {activeClass}";
                    }
                    <BarLink TextColor="TextColor.Primary" To="products" class="@classes" id="products-link"><strong>Butik</strong></BarLink>
                </BarItem>

                <BarItem>
                    @{
                        var activeClass = GetActiveClass("events");
                        var classes = $"nav-link neonText {activeClass}";
                    }
                    <BarLink TextColor="TextColor.Primary" To="events" class="nav-link neonText" id="events-link"><strong>Event</strong></BarLink>
                </BarItem>
                <BarItem>
                    @{
                        var activeClass = GetActiveClass("social");
                        var classes = $"nav-link neonText {activeClass}";
                    }
                    <BarLink TextColor="TextColor.Primary" To="social" class="nav-link neonText" id="social-link"><strong>Socialt</strong></BarLink>
                </BarItem>
                <BarItem>
                    @{
                        var activeClass = GetActiveClass("about");
                        var classes = $"nav-link neonText {activeClass}";
                    }
                    <BarLink TextColor="TextColor.Primary" To="about" class="nav-link neonText" id="about-link"><strong>Om oss</strong></BarLink>
                </BarItem>
                <BarItem>
                    @{
                        var activeClass = GetActiveClass("liveChat");
                        var classes = $"nav-link neonText {activeClass}";
                    }
                    <BarLink TextColor="TextColor.Primary" To="/liveChat" class="nav-link neonText" id="live-chat"><strong>Live chat</strong></BarLink>
                </BarItem>
            </BarStart>
            <BarEnd>

                <BarItem>
                    @{
                        var activeClass = GetActiveClass("products");
                        var classes = $"nav-link neonText {activeClass}";
                    }
                    <BarLink TextColor="TextColor.Primary" To="cart" id="cart-link">
                        <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" fill="currentColor" class="bi bi-cart neonText" viewBox="0 0 16 16" style="transform: scale(1.5);">
                            <path d="M0 1.5A.5.5 0 0 1 .5 1H2a.5.5 0 0 1 .485.379L2.89 3H14.5a.5.5 0 0 1 .491.592l-1.5 8A.5.5 0 0 1 13 12H4a.5.5 0 0 1-.491-.408L2.01 3.607 1.61 2H.5a.5.5 0 0 1-.5-.5M3.102 4l1.313 7h8.17l1.313-7zM5 12a2 2 0 1 0 0 4 2 2 0 0 0 0-4m7 0a2 2 0 1 0 0 4 2 2 0 0 0 0-4m-7 1a1 1 0 1 1 0 2 1 1 0 0 1 0-2m7 0a1 1 0 1 1 0 2 1 1 0 0 1 0-2" />
                        </svg>
                    </BarLink>
                </BarItem>

                <BarItem>
                    <AuthorizeView Roles="Admin">
                        <Authorized>
                            <BarDropdown>
                                <BarDropdownToggle id="adminDropDown" TextColor="TextColor.Primary"><strong>Admin</strong></BarDropdownToggle>
                                <BarDropdownMenu>
                                    <BarDropdownItem id="productManagement" To="Admin/ProductManagement">Produkthantering</BarDropdownItem>
                                    <BarDropdownDivider />
                                    <BarDropdownItem id="orderManagement" To="Admin/OrderManagement">Orderhantering</BarDropdownItem>
                                    <BarDropdownDivider />
                                    <BarDropdownItem id="userManagement" To="Admin/UserManagement">Användarhantering</BarDropdownItem>
                                </BarDropdownMenu>
                            </BarDropdown>
                        </Authorized>
                    </AuthorizeView>
                </BarItem>
                <AuthorizeView>
                    <NotAuthorized>
                        <BarItem>
                            <Button Type="ButtonType.Link" id="registerBtn" To="account/register" Color="Color.Dark">Bli medlem</Button>
                            <Button Type="ButtonType.Link" id="loginBtn" To="account/login" Color="Color.Dark">Logga in</Button>
                        </BarItem>
                    </NotAuthorized>
                    <Authorized>
                        <BarItem>
                            <BarLink To="account/editprofile" id="profileLink">
                                <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512" width="26" height="26">
                                    <path d="M304 128a80 80 0 1 0 -160 0 80 80 0 1 0 160 0zM96 128a128 128 0 1 1 256 0A128 128 0 1 1 96 128zM49.3 464H398.7c-8.9-63.3-63.3-112-129-112H178.3c-65.7 0-120.1 48.7-129 112zM0 482.3C0 383.8 79.8 304 178.3 304h91.4C368.2 304 448 383.8 448 482.3c0 16.4-13.3 29.7-29.7 29.7H29.7C13.3 512 0 498.7 0 482.3z"/>
                                </svg>
                            </BarLink>
                        </BarItem>
                        <BarItem>
                            <Button Clicked="LogOut" id="logoutBtn" To="account/login" Color="Color.Dark">Logga ut</Button>
                        </BarItem>
                    </Authorized>
                </AuthorizeView>

            </BarEnd>
        </BarMenu>
    </Bar>
</div>

@code {
    private string? _currentUrl;

    protected override void OnInitialized()
    {
        _currentUrl = NavigationManager.ToBaseRelativePath(NavigationManager.Uri);
        NavigationManager.LocationChanged += OnLocationChanged;
    }

    private void OnLocationChanged(object? sender, LocationChangedEventArgs e)
    {
        _currentUrl = NavigationManager.ToBaseRelativePath(e.Location);
        StateHasChanged();
    }

    public void Dispose()

    {
        NavigationManager.LocationChanged -= OnLocationChanged;
    }

    private string GetActiveClass(string page)
    {
        var currentUrl = NavigationManager.Uri.Split("/").LastOrDefault();
        var isActive = page.Equals(currentUrl, StringComparison.OrdinalIgnoreCase);
        Console.WriteLine($"Page: {page}, Current URL: {currentUrl}, IsActive: {isActive}");
        return isActive ? "active" : "";
    }


    [CascadingParameter]
    LoadingIndicator loadingIndicator { get; set; }

    private async Task LogOut()
    {
        await AuthService.LogoutAsync();
    }
}